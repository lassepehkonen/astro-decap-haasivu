---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import formatDate from "@/utils/formatDate";

export async function getStaticPaths() {
  const pages = await getCollection("pages");

  return pages.map((page) => ({
    params: { slug: page.slug },
    props: { page },
  }));
}

type Props = {
  page: CollectionEntry<"pages">;
};

const { page } = Astro.props;
---
<Layout title={page.data.title}>
  <main class="post mx-auto flex w-full max-w-prose flex-col gap-4">
    <header role="presentation" class="mb-6">
      <h1 class="text-xl font-bold">
        {page.data.title} - {formatDate(page.data.publishedAt)}
      </h1>
      <p class="text-sm italic text-gray-500">{page.data.description}</p>
    </header>

    {page.data.body.map((block) => {
      switch (block.type) {
        case "text":
          return (
            <div ={block.type} class="prose">
              <div set:html={block.content} />

            </div>
          );
        case "image":
          return (
            <div ={block.type} class="my-4">
              <img class="rounded-lg shadow-lg mx-auto" src={block.src} alt={block.alt} />
            </div>
          );
        case "columns":
          return (
            <div ={block.type} class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {block.columns.map((col, index) => (
                <div ={index} class="p-4 bg-gray-100 rounded-lg shadow-md prose">
                  <div set:html={col.content} />

                </div>
              ))}
            </div>
          );
        default:
          return null;
      }
    })}
  </main>
</Layout>
